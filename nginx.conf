events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Configuration des logs
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Configuration de performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Configuration pour l'upload de fichiers
    client_max_body_size 30M;  # 25MB pour 5 fichiers + marge pour le prompt et autres données
    client_body_buffer_size 128k;
    client_body_timeout 60s;
    client_header_timeout 60s;

    # Configuration GZIP
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Configuration upstream pour l'API Python
    upstream api_backend {
        server app:8080;  # Nom du service Docker de l'API Python
        keepalive 32;
    }

    # Configuration du serveur NGINX (reverse proxy)
    server {
        listen 8000;
        server_name localhost;

        # Configuration des timeouts (adaptés pour le streaming)
        proxy_connect_timeout 60s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;

        # Headers de proxy
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Route spécifique pour les endpoints streaming
        location /api/v1/ {
            proxy_pass http://api_backend/api/v1/;
            
            # Configuration pour l'upload de fichiers
            client_max_body_size 30M;
            client_body_buffer_size 128k;
            client_body_timeout 120s;
            
            # Headers pour Server-Sent Events (SSE)
            proxy_set_header Accept text/event-stream;
            proxy_set_header Cache-Control no-cache;
            proxy_set_header Connection "";
            
            # Désactivation complète du buffering pour le streaming
            proxy_buffering off;
            proxy_cache off;
            proxy_request_buffering off;
            proxy_max_temp_file_size 0;
            
            # Configuration chunked transfer
            chunked_transfer_encoding on;
            
            # HTTP/1.1 requis pour le streaming
            proxy_http_version 1.1;
            
            # Timeouts étendus pour les longues générations et uploads
            proxy_read_timeout 600s;
            proxy_send_timeout 600s;
            proxy_connect_timeout 60s;
            
            # Headers CORS pour le streaming depuis le frontend
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, Accept";
        }

        # Route vers l'API Python avec support streaming partiel
        location /api/v1/basic/ {
            proxy_pass http://api_backend/api/v1/basic/;

            # Configuration pour l'upload de fichiers
            client_max_body_size 30M;
            client_body_buffer_size 128k;
            client_body_timeout 120s;

            # Headers spécifiques pour l'API
            proxy_set_header Content-Type application/json;
            
            # Configuration pour le streaming
            proxy_buffering off;
            proxy_cache off;
            proxy_request_buffering off;
            
            # Support des réponses streaming (SSE)
            proxy_set_header Accept text/event-stream;
            proxy_set_header Cache-Control no-cache;
            
            # Configuration spécifique pour les streaming responses
            chunked_transfer_encoding on;
            
            # Support des WebSockets et HTTP/1.1
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeouts adaptés pour le streaming et uploads
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
        }

        # Route de health check
        location /health {
            proxy_pass http://api_backend/;
            proxy_set_header Host $host;
        }

        # Route par défaut vers l'API
        location / {
            proxy_pass http://api_backend/;
            
            # Configuration pour l'upload de fichiers
            client_max_body_size 30M;
            client_body_buffer_size 128k;
            client_body_timeout 120s;
        }

        # Configuration des erreurs
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}